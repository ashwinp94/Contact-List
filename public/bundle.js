(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
const contact = {
  contactBuilder(contactObject) {
    let contactArticle = document.createElement("article");
    let contactName = document.createElement("h3");
    contactName.textContent = contactObject.name;
    let contactNumber = document.createElement("section");
    contactNumber.textContent = contactObject.number;
    let contactAddress = document.createElement("section");
    contactAddress.textContent = contactObject.address;
    contactArticle.appendChild(contactName);
    contactArticle.appendChild(contactNumber);
    contactArticle.appendChild(contactAddress);
    return contactArticle;
  }

};
var _default = contact;
exports.default = _default;

},{}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
const contactCollection = {
  getAllContacts() {
    return fetch("http://localhost:8088/contacts").then(response => response.json());
  },

  postAllContacts(newContactToSave) {
    fetch("http://localhost:8088/contacts", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify(newContactToSave)
    });
  }

};
var _default = contactCollection;
exports.default = _default;

},{}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ContactCollection = _interopRequireDefault(require("./ContactCollection"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const contactForm = {
  createAndAppendForm() {
    let formHeader = document.createElement("h3");
    formHeader.textContent = "Add to your contacts";
    let contactNameField = document.createElement("fieldset");
    let contactNameLabel = document.createElement("label");
    contactNameLabel.textContent = "Name";
    contactNameLabel.setAttribute("for", "contact-name");
    let contactNameInput = document.createElement("input");
    contactNameInput.setAttribute("id", "contact-name");
    contactNameInput.setAttribute("name", "contact-name");
    contactNameField.appendChild(contactNameLabel);
    contactNameField.appendChild(contactNameInput);
    let contactNumberField = document.createElement("fieldset");
    let contactNumberLabel = document.createElement("label");
    contactNumberLabel.textContent = "Phone Number";
    contactNumberLabel.setAttribute("for", "contact-number");
    let contactNumberInput = document.createElement("input");
    contactNumberInput.setAttribute("id", "contact-number");
    contactNumberInput.setAttribute("name", "contact-number");
    contactNumberField.appendChild(contactNumberLabel);
    contactNumberField.appendChild(contactNumberInput);
    let contactAddressField = document.createElement("fieldset");
    let contactAddressLabel = document.createElement("label");
    contactAddressLabel.textContent = "Address";
    contactAddressLabel.setAttribute("for", "contact-address");
    let contactAddressInput = document.createElement("input");
    contactAddressInput.setAttribute("id", "contact-address");
    contactAddressInput.setAttribute("name", "contact-address");
    contactAddressField.appendChild(contactAddressLabel);
    contactAddressField.appendChild(contactAddressInput);
    let submitButton = document.createElement("button");
    submitButton.textContent = "Add Contact";
    submitButton.setAttribute("class", "contact-save");
    submitButton.addEventListener("click", this.handleAddNewFood);
    let contactFormFragment = document.createDocumentFragment();
    contactFormFragment.appendChild(formHeader);
    contactFormFragment.appendChild(contactNameField);
    contactFormFragment.appendChild(contactNumberField);
    contactFormFragment.appendChild(contactAddressField);
    contactFormFragment.appendChild(submitButton);
    let formArticle = document.querySelector(".form");
    formArticle.appendChild(contactFormFragment);
  },

  handleAddNewFood() {
    let inputContactName = document.querySelector("#contact-name").value;
    let inputContactNumber = document.querySelector("#contact-number").value;
    let inputContactAddress = document.querySelector("#contact-address").value;
    console.log(inputContactAddress);
    let newContact = {
      name: inputContactName,
      number: inputContactNumber,
      address: inputContactAddress
    };

    _ContactCollection.default.postAllContacts(newContact);
  }

};
var _default = contactForm;
exports.default = _default;

},{"./ContactCollection":2}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ContactCollection = _interopRequireDefault(require("./ContactCollection"));

var _Contact = _interopRequireDefault(require("./Contact"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const contactList = {
  contactify() {
    _ContactCollection.default.getAllContacts().then(allContacts => {
      let contactDocFragment = document.createDocumentFragment();
      allContacts.forEach(contactItem => {
        let contactHTML = _Contact.default.contactBuilder(contactItem);

        contactDocFragment.appendChild(contactHTML);
      });
      let outputArticle = document.querySelector(".output");
      outputArticle.appendChild(contactDocFragment);
    });
  }

};
var _default = contactList;
exports.default = _default;

},{"./Contact":1,"./ContactCollection":2}],5:[function(require,module,exports){
"use strict";

var _ContactList = _interopRequireDefault(require("./ContactList"));

var _ContactForm = _interopRequireDefault(require("./ContactForm"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_ContactList.default.contactify();

_ContactForm.default.createAndAppendForm();

},{"./ContactForm":3,"./ContactList":4}]},{},[5])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCIuLi9zY3JpcHRzL0NvbnRhY3QuanMiLCIuLi9zY3JpcHRzL0NvbnRhY3RDb2xsZWN0aW9uLmpzIiwiLi4vc2NyaXB0cy9Db250YWN0Rm9ybS5qcyIsIi4uL3NjcmlwdHMvQ29udGFjdExpc3QuanMiLCIuLi9zY3JpcHRzL21haW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7QUNBQSxNQUFNLE9BQU8sR0FBRztBQUNaLEVBQUEsY0FBYyxDQUFDLGFBQUQsRUFBZTtBQUN6QixRQUFJLGNBQWMsR0FBRyxRQUFRLENBQUMsYUFBVCxDQUF1QixTQUF2QixDQUFyQjtBQUVBLFFBQUksV0FBVyxHQUFHLFFBQVEsQ0FBQyxhQUFULENBQXVCLElBQXZCLENBQWxCO0FBQ0EsSUFBQSxXQUFXLENBQUMsV0FBWixHQUEwQixhQUFhLENBQUMsSUFBeEM7QUFFQSxRQUFJLGFBQWEsR0FBRyxRQUFRLENBQUMsYUFBVCxDQUF1QixTQUF2QixDQUFwQjtBQUNBLElBQUEsYUFBYSxDQUFDLFdBQWQsR0FBNEIsYUFBYSxDQUFDLE1BQTFDO0FBRUEsUUFBSSxjQUFjLEdBQUcsUUFBUSxDQUFDLGFBQVQsQ0FBdUIsU0FBdkIsQ0FBckI7QUFDQSxJQUFBLGNBQWMsQ0FBQyxXQUFmLEdBQTZCLGFBQWEsQ0FBQyxPQUEzQztBQUVBLElBQUEsY0FBYyxDQUFDLFdBQWYsQ0FBMkIsV0FBM0I7QUFDQSxJQUFBLGNBQWMsQ0FBQyxXQUFmLENBQTJCLGFBQTNCO0FBQ0EsSUFBQSxjQUFjLENBQUMsV0FBZixDQUEyQixjQUEzQjtBQUVBLFdBQU8sY0FBUDtBQUNIOztBQWxCVyxDQUFoQjtlQXFCZSxPOzs7Ozs7Ozs7O0FDckJmLE1BQU0saUJBQWlCLEdBQUc7QUFFdEIsRUFBQSxjQUFjLEdBQUc7QUFDYixXQUFPLEtBQUssQ0FBQyxnQ0FBRCxDQUFMLENBQ04sSUFETSxDQUNELFFBQVEsSUFBSSxR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ZSxXOzs7Ozs7Ozs7OztBQzdFZjs7QUFDQTs7OztBQUVBLE1BQU0sV0FBVyxHQUFHO0FBQ2hCLEVBQUEsVUFBVSxHQUFFO0FBQ1IsK0JBQWtCLGNBQWxCLEdBQ0MsSUFERCxDQUNNLFdBQVcsSUFBRztBQUNoQixVQUFJLGtCQUFrQixHQUFHLFFBQVEsQ0FBQyxzQkFBVCxFQUF6QjtBQUNBLE1BQUEsV0FBVyxDQUFDLE9BQVosQ0FBb0IsV0FBVyxJQUFJO0FBQy9CLFlBQUksV0FBVyxHQUFHLGlCQUFRLGNBQVIsQ0FBdUIsV0FBdkIsQ0FBbEI7O0FBQ0EsUUFBQSxrQkFBa0IsQ0FBQyxXQUFuQixDQUErQixXQUEvQjtBQUNILE9BSEQ7QUFJQSxVQUFJLGFBQWEsR0FBRyxRQUFRLENBQUMsYUFBVCxDQUF1QixTQUF2QixDQUFwQjtBQUNBLE1BQUEsYUFBYSxDQUFDLFdBQWQsQ0FBMEIsa0JBQTFCO0FBRUgsS0FWRDtBQVdIOztBQWJlLENBQXBCO2VBZ0JlLFc7Ozs7OztBQ25CZjs7QUFDQTs7OztBQUVBLHFCQUFZLFVBQVo7O0FBQ0EscUJBQVksbUJBQVoiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCJjb25zdCBjb250YWN0ID0ge1xyXG4gICAgY29udGFjdEJ1aWxkZXIoY29udGFjdE9iamVjdCl7XHJcbiAgICAgICAgbGV0IGNvbnRhY3RBcnRpY2xlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImFydGljbGVcIik7XHJcblxyXG4gICAgICAgIGxldCBjb250YWN0TmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoM1wiKVxyXG4gICAgICAgIGNvbnRhY3ROYW1lLnRleHRDb250ZW50ID0gY29udGFjdE9iamVjdC5uYW1lO1xyXG5cclxuICAgICAgICBsZXQgY29udGFjdE51bWJlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzZWN0aW9uXCIpXHJcbiAgICAgICAgY29udGFjdE51bWJlci50ZXh0Q29udGVudCA9IGNvbnRhY3RPYmplY3QubnVtYmVyO1xyXG5cclxuICAgICAgICBsZXQgY29udGFjdEFkZHJlc3MgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2VjdGlvblwiKVxyXG4gICAgICAgIGNvbnRhY3RBZGRyZXNzLnRleHRDb250ZW50ID0gY29udGFjdE9iamVjdC5hZGRyZXNzXHJcblxyXG4gICAgICAgIGNvbnRhY3RBcnRpY2xlLmFwcGVuZENoaWxkKGNvbnRhY3ROYW1lKVxyXG4gICAgICAgIGNvbnRhY3RBcnRpY2xlLmFwcGVuZENoaWxkKGNvbnRhY3ROdW1iZXIpXHJcbiAgICAgICAgY29udGFjdEFydGljbGUuYXBwZW5kQ2hpbGQoY29udGFjdEFkZHJlc3MpXHJcblxyXG4gICAgICAgIHJldHVybiBjb250YWN0QXJ0aWNsZVxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb250YWN0IiwiY29uc3QgY29udGFjdENvbGxlY3Rpb24gPSB7XHJcblxyXG4gICAgZ2V0QWxsQ29udGFjdHMgKCl7XHJcbiAgICAgICAgcmV0dXJuIGZldGNoKFwiaHR0cDovL2xvY2FsaG9zdDo4MDg4L2NvbnRhY3RzXCIpXHJcbiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKVxyXG4gICAgfSxcclxuICAgIHBvc3RBbGxDb250YWN0cyhuZXdDb250YWN0VG9TYXZlKXtcclxuICAgICAgICBmZXRjaChcImh0dHA6Ly9sb2NhbGhvc3Q6ODA4OC9jb250YWN0c1wiLCB7XHJcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxyXG4gICAgICB9LFxyXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KG5ld0NvbnRhY3RUb1NhdmUpXHJcbiAgICB9KVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29udGFjdENvbGxlY3Rpb24iLCJpbXBvcnQgY29udGFjdENvbGxlY3Rpb24gZnJvbSBcIi4vQ29udGFjdENvbGxlY3Rpb25cIlxyXG5cclxuY29uc3QgY29udGFjdEZvcm0gPSB7XHJcbiAgICBjcmVhdGVBbmRBcHBlbmRGb3JtKCkge1xyXG4gICAgICAgIGxldCBmb3JtSGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgzXCIpXHJcbiAgICAgICAgZm9ybUhlYWRlci50ZXh0Q29udGVudCA9IFwiQWRkIHRvIHlvdXIgY29udGFjdHNcIlxyXG5cclxuICAgICAgICBsZXQgY29udGFjdE5hbWVGaWVsZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmaWVsZHNldFwiKVxyXG5cclxuICAgICAgICBsZXQgY29udGFjdE5hbWVMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKVxyXG4gICAgICAgIGNvbnRhY3ROYW1lTGFiZWwudGV4dENvbnRlbnQgPSBcIk5hbWVcIlxyXG4gICAgICAgIGNvbnRhY3ROYW1lTGFiZWwuc2V0QXR0cmlidXRlKFwiZm9yXCIsIFwiY29udGFjdC1uYW1lXCIpXHJcbiAgICAgICAgbGV0IGNvbnRhY3ROYW1lSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIilcclxuICAgICAgICBjb250YWN0TmFtZUlucHV0LnNldEF0dHJpYnV0ZShcImlkXCIsIFwiY29udGFjdC1uYW1lXCIpXHJcbiAgICAgICAgY29udGFjdE5hbWVJbnB1dC5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsIFwiY29udGFjdC1uYW1lXCIpXHJcblxyXG4gICAgICAgIGNvbnRhY3ROYW1lRmllbGQuYXBwZW5kQ2hpbGQoY29udGFjdE5hbWVMYWJlbClcclxuICAgICAgICBjb250YWN0TmFtZUZpZWxkLmFwcGVuZENoaWxkKGNvbnRhY3ROYW1lSW5wdXQpXHJcblxyXG4gICAgICAgIGxldCBjb250YWN0TnVtYmVyRmllbGQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZmllbGRzZXRcIilcclxuXHJcbiAgICAgICAgbGV0IGNvbnRhY3ROdW1iZXJMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKVxyXG4gICAgICAgIGNvbnRhY3ROdW1iZXJMYWJlbC50ZXh0Q29udGVudCA9IFwiUGhvbmUgTnVtYmVyXCJcclxuICAgICAgICBjb250YWN0TnVtYmVyTGFiZWwuc2V0QXR0cmlidXRlKFwiZm9yXCIsIFwiY29udGFjdC1udW1iZXJcIilcclxuICAgICAgICBsZXQgY29udGFjdE51bWJlcklucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpXHJcbiAgICAgICAgY29udGFjdE51bWJlcklucHV0LnNldEF0dHJpYnV0ZShcImlkXCIsIFwiY29udGFjdC1udW1iZXJcIilcclxuICAgICAgICBjb250YWN0TnVtYmVySW5wdXQuc2V0QXR0cmlidXRlKFwibmFtZVwiLCBcImNvbnRhY3QtbnVtYmVyXCIpXHJcblxyXG4gICAgICAgIGNvbnRhY3ROdW1iZXJGaWVsZC5hcHBlbmRDaGlsZChjb250YWN0TnVtYmVyTGFiZWwpXHJcbiAgICAgICAgY29udGFjdE51bWJlckZpZWxkLmFwcGVuZENoaWxkKGNvbnRhY3ROdW1iZXJJbnB1dClcclxuXHJcbiAgICAgICAgbGV0IGNvbnRhY3RBZGRyZXNzRmllbGQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZmllbGRzZXRcIilcclxuXHJcbiAgICAgICAgbGV0IGNvbnRhY3RBZGRyZXNzTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIilcclxuICAgICAgICBjb250YWN0QWRkcmVzc0xhYmVsLnRleHRDb250ZW50ID0gXCJBZGRyZXNzXCJcclxuICAgICAgICBjb250YWN0QWRkcmVzc0xhYmVsLnNldEF0dHJpYnV0ZShcImZvclwiLCBcImNvbnRhY3QtYWRkcmVzc1wiKVxyXG4gICAgICAgIGxldCBjb250YWN0QWRkcmVzc0lucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpXHJcbiAgICAgICAgY29udGFjdEFkZHJlc3NJbnB1dC5zZXRBdHRyaWJ1dGUoXCJpZFwiLFwiY29udGFjdC1hZGRyZXNzXCIpXHJcbiAgICAgICAgY29udGFjdEFkZHJlc3NJbnB1dC5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsXCJjb250YWN0LWFkZHJlc3NcIilcclxuXHJcbiAgICAgICAgY29udGFjdEFkZHJlc3NGaWVsZC5hcHBlbmRDaGlsZChjb250YWN0QWRkcmVzc0xhYmVsKVxyXG4gICAgICAgIGNvbnRhY3RBZGRyZXNzRmllbGQuYXBwZW5kQ2hpbGQoY29udGFjdEFkZHJlc3NJbnB1dClcclxuXHJcbiAgICAgICAgbGV0IHN1Ym1pdEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIilcclxuICAgICAgICBzdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBcIkFkZCBDb250YWN0XCJcclxuICAgICAgICBzdWJtaXRCdXR0b24uc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJjb250YWN0LXNhdmVcIilcclxuXHJcbiAgICAgICAgc3VibWl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLmhhbmRsZUFkZE5ld0Zvb2QpXHJcblxyXG4gICAgICAgIGxldCBjb250YWN0Rm9ybUZyYWdtZW50ID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpXHJcbiAgICAgICAgY29udGFjdEZvcm1GcmFnbWVudC5hcHBlbmRDaGlsZChmb3JtSGVhZGVyKVxyXG4gICAgICAgIGNvbnRhY3RGb3JtRnJhZ21lbnQuYXBwZW5kQ2hpbGQoY29udGFjdE5hbWVGaWVsZClcclxuICAgICAgICBjb250YWN0Rm9ybUZyYWdtZW50LmFwcGVuZENoaWxkKGNvbnRhY3ROdW1iZXJGaWVsZClcclxuICAgICAgICBjb250YWN0Rm9ybUZyYWdtZW50LmFwcGVuZENoaWxkKGNvbnRhY3RBZGRyZXNzRmllbGQpXHJcbiAgICAgICAgY29udGFjdEZvcm1GcmFnbWVudC5hcHBlbmRDaGlsZChzdWJtaXRCdXR0b24pXHJcblxyXG4gICAgICAgIGxldCBmb3JtQXJ0aWNsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZm9ybVwiKVxyXG4gICAgICAgIGZvcm1BcnRpY2xlLmFwcGVuZENoaWxkKGNvbnRhY3RGb3JtRnJhZ21lbnQpXHJcbiAgICB9LFxyXG4gICAgaGFuZGxlQWRkTmV3Rm9vZCAoKSB7XHJcbiAgICAgICAgbGV0IGlucHV0Q29udGFjdE5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NvbnRhY3QtbmFtZVwiKS52YWx1ZVxyXG4gICAgICAgIGxldCBpbnB1dENvbnRhY3ROdW1iZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NvbnRhY3QtbnVtYmVyXCIpLnZhbHVlXHJcbiAgICAgICAgbGV0IGlucHV0Q29udGFjdEFkZHJlc3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NvbnRhY3QtYWRkcmVzc1wiKS52YWx1ZVxyXG5cclxuICAgICAgICBjb25zb2xlLmxvZyhpbnB1dENvbnRhY3RBZGRyZXNzKVxyXG5cclxuICAgICAgICBsZXQgbmV3Q29udGFjdCA9IHtcclxuICAgICAgICAgICAgbmFtZTogaW5wdXRDb250YWN0TmFtZSxcclxuICAgICAgICAgICAgbnVtYmVyOiBpbnB1dENvbnRhY3ROdW1iZXIsXHJcbiAgICAgICAgICAgIGFkZHJlc3M6IGlucHV0Q29udGFjdEFkZHJlc3NcclxuICAgICAgICB9XHJcbiAgICAgICAgY29udGFjdENvbGxlY3Rpb24ucG9zdEFsbENvbnRhY3RzKG5ld0NvbnRhY3QpXHJcblxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb250YWN0Rm9ybTsiLCJpbXBvcnQgY29udGFjdENvbGxlY3Rpb24gZnJvbSBcIi4vQ29udGFjdENvbGxlY3Rpb25cIlxyXG5pbXBvcnQgY29udGFjdCBmcm9tIFwiLi9Db250YWN0XCJcclxuXHJcbmNvbnN0IGNvbnRhY3RMaXN0ID0ge1xyXG4gICAgY29udGFjdGlmeSgpe1xyXG4gICAgICAgIGNvbnRhY3RDb2xsZWN0aW9uLmdldEFsbENvbnRhY3RzKClcclxuICAgICAgICAudGhlbihhbGxDb250YWN0cyA9PntcclxuICAgICAgICAgICAgbGV0IGNvbnRhY3REb2NGcmFnbWVudCA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKVxyXG4gICAgICAgICAgICBhbGxDb250YWN0cy5mb3JFYWNoKGNvbnRhY3RJdGVtID0+IHtcclxuICAgICAgICAgICAgICAgIGxldCBjb250YWN0SFRNTCA9IGNvbnRhY3QuY29udGFjdEJ1aWxkZXIoY29udGFjdEl0ZW0pXHJcbiAgICAgICAgICAgICAgICBjb250YWN0RG9jRnJhZ21lbnQuYXBwZW5kQ2hpbGQoY29udGFjdEhUTUwpXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBsZXQgb3V0cHV0QXJ0aWNsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIub3V0cHV0XCIpXHJcbiAgICAgICAgICAgIG91dHB1dEFydGljbGUuYXBwZW5kQ2hpbGQoY29udGFjdERvY0ZyYWdtZW50KVxyXG5cclxuICAgICAgICB9KVxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb250YWN0TGlzdCIsImltcG9ydCBjb250YWN0TGlzdCBmcm9tIFwiLi9Db250YWN0TGlzdFwiXHJcbmltcG9ydCBjb250YWN0Rm9ybSBmcm9tIFwiLi9Db250YWN0Rm9ybVwiXHJcblxyXG5jb250YWN0TGlzdC5jb250YWN0aWZ5KClcclxuY29udGFjdEZvcm0uY3JlYXRlQW5kQXBwZW5kRm9ybSgpXHJcblxyXG4iXX0=
